//>>built
define("com/huayun/gl/shaders/rect",["exports","../../webgis/data/uniform"],function(d,a){d.rectVS="attribute vec2 a_pos;\nattribute vec4 a_size;\n\nuniform mat4 u_matrix;\nuniform lowp float u_device_pixel_ratio;\nuniform highp float u_camera_to_center_distance;\nuniform mediump vec2 u_extrude_scale;\nuniform highp float u_radian;\nuniform bool u_is_stroke;\n\nuniform highp float u_size;\n\nvoid main() {\n    gl_Position \x3d u_matrix * vec4(a_pos, 0.0, 1.0);\n    highp float angle_sin \x3d sin(u_radian);\n    highp float angle_cos \x3d cos(u_radian);\n    mat2 rotation_matrix \x3d mat2(angle_cos, -1.0 * angle_sin, angle_sin, angle_cos);\n    vec2 core_size \x3d a_size.xy / 2.0;\n    vec2 stroke_size \x3d a_size.zw / 2.0;\n    vec2 rotated_extrude;\n    if (u_is_stroke) {\n        rotated_extrude \x3d rotation_matrix * stroke_size * u_size;\n    } else {\n        rotated_extrude \x3d rotation_matrix * core_size * u_size;\n    }\n    gl_Position.xy +\x3d rotated_extrude * u_extrude_scale * u_camera_to_center_distance;\n}";
d.rectFS="precision mediump float;\nuniform vec4 u_color;\n\nvoid main() {\n    gl_FragColor \x3d u_color;\n}";d.rectUniforms=function(b,c){return{u_matrix:new a.UniformMatrix4f(b,c.u_matrix),u_device_pixel_ratio:new a.Uniform1f(b,c.u_device_pixel_ratio),u_camera_to_center_distance:new a.Uniform1f(b,c.u_camera_to_center_distance),u_extrude_scale:new a.Uniform2f(b,c.u_extrude_scale),u_size:new a.Uniform1f(b,c.u_size),u_radian:new a.Uniform1f(b,c.u_radian),u_is_stroke:new a.Uniform1i(b,c.u_is_stroke),
u_color:new a.Uniform4f(b,c.u_color)}}});