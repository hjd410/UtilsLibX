//>>built
define("com/huayun/webgis/layers/support/expression/Interpolate",["../style/styleUtils","../../../utils/colorSpaces","../UnitBezier"],function(_1,_2,_3){function _4(_5,_6,_7,_8){var _9=_8-_7;var _a=_5-_7;if(_9===0){return 0;}else{if(_6===1){return _a/_9;}else{return (Math.pow(_6,_a)-1)/(Math.pow(_6,_9)-1);}}};var _b=function _b(_c,_d,_e,_f,_10){this.type=_c;this.operator=_d;this.interpolation=_e;this.input=_f;this.labels=[];this.outputs=[];for(var i=0,_11=_10;i<_11.length;i+=1){var ref=_11[i];var _12=ref[0];var _13=ref[1];this.labels.push(_12);this.outputs.push(_13);}};_b.interpolationFactor=function(_14,_15,_16,_17){var t=0;if(_14.name==="exponential"){t=_4(_15,_14.base,_16,_17);}else{if(_14.name==="linear"){t=_4(_15,1,_16,_17);}else{if(_14.name==="cubic-bezier"){var c=_14.controlPoints;var ub=new _3(c[0],c[1],c[2],c[3]);t=ub.solve(_4(_15,1,_16,_17));}}}return t;};_b.parse=function(_18,_19){var _1a=_18[0];var _1b=_18[1];var _1c=_18[2];var _1d=_18.slice(3);if(!Array.isArray(_1b)||_1b.length===0){return _19.error("Expected an interpolation type expression.",1);}if(_1b[0]==="linear"){_1b={name:"linear"};}else{if(_1b[0]==="exponential"){var _1e=_1b[1];if(typeof _1e!=="number"){return _19.error("Exponential interpolation requires a numeric base.",1,1);}_1b={name:"exponential",base:_1e};}else{if(_1b[0]==="cubic-bezier"){var _1f=_1b.slice(1);if(_1f.length!==4||_1f.some(function(t){return typeof t!=="number"||t<0||t>1;})){return _19.error("Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.",1);}_1b={name:"cubic-bezier",controlPoints:(_1f)};}else{return _19.error("Unknown interpolation type "+String(_1b[0]),1,0);}}}if(_18.length-1<4){return _19.error(("Expected at least 4 arguments, but found only "+(_18.length-1)+"."));}if((_18.length-1)%2!==0){return _19.error("Expected an even number of arguments.");}_1c=_19.parse(_1c,2,{kind:"number"});if(!_1c){return null;}var _20=[];var _21=null;if(_1a==="interpolate-hcl"||_1a==="interpolate-lab"){_21={kind:"color"};}else{if(_19.expectedType&&_19.expectedType.kind!=="value"){_21=_19.expectedType;}}for(var i=0;i<_1d.length;i+=2){var _22=_1d[i];var _23=_1d[i+1];var _24=i+3;var _25=i+4;if(typeof _22!=="number"){return _19.error("Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.",_24);}if(_20.length&&_20[_20.length-1][0]>=_22){return _19.error("Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.",_24);}var _26=_19.parse(_23,_25,_21);if(!_26){return null;}_21=_21||_26.type;_20.push([_22,_26]);}if(_21.kind!=="number"&&_21.kind!=="color"&&!(_21.kind==="array"&&_21.itemType.kind==="number"&&typeof _21.N==="number")){return _19.error("Type "+_1.toString(_21)+" is not interpolatable.");}return new _b(_21,_1a,_1b,_1c,_20);};_b.prototype.evaluate=function(ctx){var _27=this.labels;var _28=this.outputs;if(_27.length===1){return _28[0].evaluate(ctx);}var _29=this.input.evaluate(ctx);if(_29<=_27[0]){return _28[0].evaluate(ctx);}var _2a=_27.length;if(_29>=_27[_2a-1]){return _28[_2a-1].evaluate(ctx);}var _2b=_1.findStopLessThanOrEqualTo(_27,_29);var _2c=_27[_2b];var _2d=_27[_2b+1];var t=_b.interpolationFactor(this.interpolation,_29,_2c,_2d);var _2e=_28[_2b].evaluate(ctx);var _2f=_28[_2b+1].evaluate(ctx);if(this.operator==="interpolate"){return (_1.interpolate[this.type.kind.toLowerCase()])(_2e,_2f,t);}else{if(this.operator==="interpolate-hcl"){var hcl=_2.hcl;return hcl.reverse(hcl.interpolate(hcl.forward(_2e),hcl.forward(_2f),t));}else{var lab=_2.lab;return lab.reverse(lab.interpolate(lab.forward(_2e),lab.forward(_2f),t));}}};_b.prototype.eachChild=function(fn){fn(this.input);for(var i=0,_30=this.outputs;i<_30.length;i+=1){var _31=_30[i];fn(_31);}};_b.prototype.possibleOutputs=function(){var ref;return (ref=[]).concat.apply(ref,this.outputs.map(function(_32){return _32.possibleOutputs();}));};_b.prototype.serialize=function(){var _33;if(this.interpolation.name==="linear"){_33=["linear"];}else{if(this.interpolation.name==="exponential"){if(this.interpolation.base===1){_33=["linear"];}else{_33=["exponential",this.interpolation.base];}}else{_33=["cubic-bezier"].concat(this.interpolation.controlPoints);}}var _34=[this.operator,_33,this.input.serialize()];for(var i=0;i<this.labels.length;i++){_34.push(this.labels[i],this.outputs[i].serialize());}return _34;};return _b;});