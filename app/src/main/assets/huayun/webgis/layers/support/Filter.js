//>>built
define("com/huayun/webgis/layers/support/Filter",["require","exports"],function(f,g){return function(){function _1(op,_2,_3){this._op=op;"$type"===_2?(this._val=_3 instanceof Array?_3.map(function(a){return _1._types.indexOf(a);}):_1._types.indexOf(_3),this._op+=11):(this._key=_2,this._val=_3);};_1.prototype.filter=function(a){switch(this._op){case 0:return this._val;case 1:return a.values[this._key]===this._val;case 2:return a.values[this._key]!==this._val;case 3:return a.values[this._key]<this._val;case 4:return a.values[this._key]>this._val;case 5:return a.values[this._key]<=this._val;case 6:return a.values[this._key]>=this._val;case 7:return -1!==this._val.indexOf(a.values[this._key]);case 8:return -1===this._val.indexOf(a.values[this._key]);case 9:for(var b=0,c=this._val;b<c.length;b++){var e=c[b];if(e.filter(a)){return !0;}}return !1;case 10:b=0;for(c=this._val;b<c.length;b++){if(e=c[b],!e.filter(a)){return !1;}}return !0;case 11:b=0;for(c=this._val;b<c.length;b++){if(e=c[b],e.filter(a)){return !1;}}return !0;case 12:return a.type===this._val;case 13:return a.type!==this._val;case 14:return a.type<this._val;case 15:return a.type>this._val;case 16:return a.type>=this._val;case 17:return a.type<=this._val;case 18:return -1!==this._val.indexOf(a.type);case 19:return -1===this._val.indexOf(a.type);case 20:return void 0!==a.values[this._key];case 21:return void 0===a.values[this._key];}};_1.createFilter=function(a){if(!a){return new _1(0,void 0,!0);}var d=a[0];if(1>=a.length){return new _1(0,void 0,"any"!==d);}switch(d){case "==":return new _1(1,a[1],a[2]);case "!=":return new _1(2,a[1],a[2]);case ">":return new _1(4,a[1],a[2]);case "<":return new _1(3,a[1],a[2]);case ">=":return new _1(6,a[1],a[2]);case "<=":return new _1(5,a[1],a[2]);case "in":return new _1(7,a[1],a.slice(2));case "!in":return new _1(8,a[1],a.slice(2));case "any":return new _1(9,void 0,a.slice(1).map(_1.createFilter.bind(this)));case "all":return new _1(10,void 0,a.slice(1).map(_1.createFilter.bind(this)));case "none":return new _1(11,void 0,a.slice(1).map(_1.createFilter.bind(this)));case "has":return new _1(20,a[1],void 0);case "!has":return new _1(21,a[1],void 0);default:throw Error("invalid operator: "+d);}};_1._types=["Unknown","Point","LineString","Polygon"];return _1;}();});